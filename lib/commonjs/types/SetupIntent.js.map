{"version":3,"sources":["SetupIntent.ts"],"names":["Status"],"mappings":"kFA6BYA,CAAAA,M,iCAAAA,M,EAAAA,M,0BAAAA,M,kDAAAA,M,gDAAAA,M,wBAAAA,M,4BAAAA,M,oCAAAA,M,yBAAAA,M,kBAAAA,M","sourcesContent":["import type { Type } from './PaymentMethod';\nimport type { LastPaymentError } from './PaymentIntent';\nimport type { NextAction } from './NextAction';\nimport type * as PaymentMethod from './PaymentMethod';\nexport interface Result {\n  id: string;\n  clientSecret: string;\n  lastSetupError: LastPaymentError | null;\n  created: string | null;\n  livemode: boolean;\n  paymentMethodId: string | null;\n  status: Status;\n  paymentMethodTypes: Type[];\n  usage: FutureUsage;\n  description: string | null;\n  nextAction: NextAction | null;\n}\n\nexport type ConfirmParams = PaymentMethod.CreateParams;\n\nexport type ConfirmOptions = {};\n\nexport type FutureUsage =\n  | 'Unknown'\n  | 'None'\n  | 'OnSession'\n  | 'OffSession'\n  | 'OneTime';\n\nexport enum Status {\n  Succeeded = 'Succeeded',\n  RequiresPaymentMethod = 'RequiresPaymentMethod',\n  RequiresConfirmation = 'RequiresConfirmation',\n  Canceled = 'Canceled',\n  Processing = 'Processing',\n  RequiresAction = 'RequiresAction',\n  Unknown = 'Unknown',\n}\n"]}